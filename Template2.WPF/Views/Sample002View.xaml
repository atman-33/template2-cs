<UserControl
    x:Class="Template2.WPF.Views.Sample002View"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:bindings="clr-namespace:Template2.WPF.ExtendedBindings"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:prism="http://prismlibrary.com/"
    prism:ViewModelLocator.AutoWireViewModel="True"
    Background="{StaticResource backgroundColor}">

    <Grid Margin="{StaticResource gridMargin}">
        <Grid.RowDefinitions>
            <RowDefinition Height="60" />
            <RowDefinition Height="60" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <StackPanel
            Grid.Row="0"
            Grid.Column="0"
            Margin="5"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Orientation="Horizontal">
            <Button
                Width="100"
                Margin="5"
                Command="{Binding AddRowButton}"
                Content="行追加"
                Cursor="Hand"
                Style="{StaticResource MaterialDesignPaperLightButton}" />

            <Button
                Width="100"
                Margin="5"
                Command="{Binding DeleteRowButton}"
                Content="行削除"
                Cursor="Hand"
                Style="{StaticResource MaterialDesignPaperLightButton}" />

            <Button
                Width="100"
                Margin="5"
                Command="{Binding SaveButton}"
                Content="保存"
                Cursor="Hand"
                Style="{StaticResource MaterialDesignPaperDarkButton}" />

            <TextBox
                Width="300"
                Margin="5"
                HorizontalAlignment="Left"
                materialDesign:HintAssist.Hint="選択中の作業者コード"
                IsEnabled="False"
                Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                Text="{Binding WorkerCodeText}"
                TextWrapping="Wrap" />
        </StackPanel>

        <StackPanel
            Grid.Row="1"
            Grid.Column="0"
            Margin="5"
            Orientation="Horizontal">

            <Button
                Margin="5"
                Command="{Binding ChangeWorkerNameVisibilityButton}"
                Content="作業者名称：表示⇔非表示"
                Cursor="Hand"
                Style="{StaticResource MaterialDesignRaisedDarkButton}" />
        </StackPanel>

        <materialDesign:Card
            Grid.Row="2"
            Grid.Column="0"
            Margin="5"
            HorizontalAlignment="Left"
            Style="{StaticResource commonCard}">

            <!--  ObservableCollectionをBindした場合、CanUserAddRows="True"でも新規行は追加されない。  -->
            <DataGrid
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                CanUserAddRows="False"
                Cursor="Hand"
                IsReadOnly="False"
                ItemsSource="{Binding WorkerMstEntities}"
                SelectedItem="{Binding WorkerMstEntitiesSlectedItem}"
                Style="{StaticResource commonDataGrid}">

                <i:Interaction.Triggers>
                    <!--  選択が変更されてセル編集を開始した時にトリガー  -->
                    <i:EventTrigger EventName="SelectedCellsChanged">
                        <prism:InvokeCommandAction Command="{Binding WorkerMstEntitiesSelectedCellsChanged}" />
                    </i:EventTrigger>

                    <!--  選択が変更されてセル編集を終了した時にトリガー  -->
                    <i:EventTrigger EventName="CurrentCellChanged">
                        <prism:InvokeCommandAction Command="{Binding WorkerMstEntitiesCurrentCellChanged}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <DataGrid.Resources>
                    <!--  DataGridのItemSourceとは別のアイテムをBindするために必要  -->
                    <bindings:BindingProxy x:Key="Proxy" Data="{Binding}" />
                </DataGrid.Resources>

                <DataGrid.Columns>
                    <materialDesign:DataGridTextColumn Binding="{Binding WorkerCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="作業者コード" />
                    <!--  カラムのVisibilityは、BindingProxyクラスを利用してViewModelのプロパティを参照する必要有り  -->
                    <materialDesign:DataGridTextColumn
                        Binding="{Binding WorkerName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        Header="作業者名称"
                        Visibility="{Binding Data.WorkerNameVisibility, Source={StaticResource Proxy}}" />

                    <materialDesign:DataGridComboBoxColumn
                        DisplayMemberPath="WorkerGroupName.Value"
                        Header="作業者グループ"
                        ItemsSourceBinding="{Binding Data.WorkerGroupMstEntities, Source={StaticResource Proxy}}"
                        SelectedValueBinding="{Binding WorkerGroupCode}"
                        SelectedValuePath="WorkerGroupCode.Value" />
                </DataGrid.Columns>

            </DataGrid>
        </materialDesign:Card>

    </Grid>

</UserControl>
